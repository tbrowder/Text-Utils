=begin pod

=head1 NAME

Text::Utils - Miscellaneous text utilities

=head1 SYNOPSIS

=begin code :lang<Raku>
# Export individual routines or :ALL
use Text::Utils :strip-comment;
my $text = q:to/HERE/;
    any kind of text, including code"; # some comment
    my $s = 'foo'; # another comment
    HERE

for $text.lines -> $line is copy {
    $line = strip-comment $line;
    say $line;
}
# OUTPUT:
any kind of text, including code;
my $s = 'foo';
=end code

=head1 DESCRIPTION

This module replaces the obsolete module 'Text::More' and
it should be an easy drop-in replacement.

The module contains several routines to make text handling
easier for module and program authors. Following is a short
synopsis and signature for each of the routines.

=head2 list2text

Turn a list into a text string for use in a document

For example, this list C<<1 2 3>> becomes either
this C<"1, 2, and 3"> (the default result) or this
C<"1, 2 and 3"> (if the C<$optional-comma> named variable
is set to false). The default result uses the so-called I<Oxford Comma>
which is not popular among some writers, but those authors
may change the default behavior by permanently by defining
the environment variable C<TEXT_UTILS_NO_OPTIONAL_COMMA>.

The signature:

=begin code :lang<Raku>
sub list2text(@list, :$optional-comma is copy = True) is export(:list2text) 
{...}
=end code

 

=head1 AUTHOR

Tom Browder <tom.browder@gmail.com>

=head1 COPYRIGHT AND LICENSE

Copyright &#x00A9; 2019-2020 Tom Browder

This library is free software; you can redistribute it or modify it under the Artistic License 2.0.

=end pod

